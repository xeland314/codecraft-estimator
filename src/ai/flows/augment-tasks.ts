// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Augments a module with additional tasks and adjusted time estimates based on a prompt.
 *
 * - augmentTasks - A function that handles the task augmentation process.
 * - AugmentTasksInput - The input type for the augmentTasks function.
 * - AugmentTasksOutput - The return type for the augmentTasks function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AugmentTasksInputSchema = z.object({
  moduleDescription: z
    .string()
    .describe('The description of the module to augment.'),
  existingTasks: z
    .string()
    .describe('The existing tasks in the module, as a string.'),
  prompt: z
    .string()
    .describe(
      'A prompt to guide the addition of more tasks to the current module and adjust task times.'
    ),
});
export type AugmentTasksInput = z.infer<typeof AugmentTasksInputSchema>;

const AugmentTasksOutputSchema = z.object({
  augmentedTasks: z
    .string()
    .describe('The augmented tasks with adjusted time estimates.'),
});
export type AugmentTasksOutput = z.infer<typeof AugmentTasksOutputSchema>;

export async function augmentTasks(input: AugmentTasksInput): Promise<AugmentTasksOutput> {
  return augmentTasksFlow(input);
}

const prompt = ai.definePrompt({
  name: 'augmentTasksPrompt',
  input: {schema: AugmentTasksInputSchema},
  output: {schema: AugmentTasksOutputSchema},
  prompt: `You are a project management assistant. You will be provided with a module description, a list of existing tasks, and a prompt.
Your job is to augment the existing tasks with new tasks and adjusted time estimates based on the prompt.

Module Description: {{{moduleDescription}}}
Existing Tasks: {{{existingTasks}}}
Prompt: {{{prompt}}}

Return the augmented tasks with adjusted time estimates as a string.
`,
});

const augmentTasksFlow = ai.defineFlow(
  {
    name: 'augmentTasksFlow',
    inputSchema: AugmentTasksInputSchema,
    outputSchema: AugmentTasksOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
